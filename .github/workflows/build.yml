name: Continuous Integration

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-windows:
    name: Windows Build
    runs-on: windows-latest

    env:
      PROJECT_NAME: PhotoManager/PhotoManager.sln
      DOTNET_VERSION: 8.0.x

    steps:
      # Checkout the code
      - name: ⤵️ Checkout Source
        uses: actions/checkout@v4

      # Setup .NET SDK
      - name: 🛠️ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Cache NuGet packages for faster builds
      - name: 💾 Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      # Display .NET version for confirmation
      - name: 🖥️ Display .NET version
        run: dotnet --info

      # Restore dependencies
      - name: 🛠️ Restore dependencies
        run: dotnet restore ${{ env.PROJECT_NAME }}

      # Build the project with Release configuration and output results to 'package' folder
      - name: 🔨 Build
        run: dotnet build --no-restore --configuration Release --output package ${{ env.PROJECT_NAME }}

      # Run tests with Release configuration and output results to 'test-results' folder
      - name: 🔨 Test
        run: dotnet test --no-build --configuration Release --verbosity normal --logger "trx;LogFileName=test-results/test-results.trx" ${{ env.PROJECT_NAME }}

      # Upload build artifacts
      - name: 💾 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: package

      # Upload test results
      - name: 💾 Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Test results (Windows)
          path: test-results
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
