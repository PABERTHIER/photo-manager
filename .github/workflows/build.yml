name: Continuous Integration

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-windows:
    name: Windows Build
    runs-on: windows-latest

    env:
      PROJECT_NAME: PhotoManager/PhotoManager.sln
      DOTNET_VERSION: 8.0.x

    steps:
      # Step 1: Checkout the code
      - name: ⤵️ Checkout Source
        uses: actions/checkout@v4

      # Step 2: Setup .NET SDK
      - name: 🛠️ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Step 3: Cache NuGet packages for faster builds
      - name: 💾 Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      # Step 4: Display .NET version for confirmation
      - name: 🖥️ Display .NET version
        run: dotnet --info

      # Step 5: Restore dependencies
      - name: 🛠️ Restore dependencies
        run: dotnet restore ${{ env.PROJECT_NAME }}

      # Step 6: Build the project with Release configuration
      - name: 🔨 Build
        run: dotnet build --no-restore --configuration Release ${{ env.PROJECT_NAME }}

      # Step 7: Run tests with Release configuration and generate code coverage report
      - name: 🔨 Test with Coverage
        run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" ${{ env.PROJECT_NAME }}

      - name: 📂 List Test Results Directory
        run: ls PhotoManager/PhotoManager.Tests/TestResults

      # TODO: Fix the current errors to use it
      # Step 8: Run linting process
      # - name: 🔨 Lint
      #   run: dotnet format ${{ env.PROJECT_NAME }} --severity warn --verify-no-changes

      # Step 9: Upload coverage to Codecov
      - name: ☁️ Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: PhotoManager/PhotoManager.Tests/TestResults
          name: codecov-windows-latest
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
